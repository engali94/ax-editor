//
//  Swift.swift
//  Core
//
//  Created by Ali on 1.01.2021.
//

import Foundation

public let swift = Language(
    name: "Swift",
    icon: "îž¨ ",
    extensions: ["swift"],
    keywords: [
        "as",
        "associatedtype",
        "break",
        "case",
        "catch",
        "class",
        "continue",
        "convenience",
        "default",
        "defer",
        "deinit",
        "else",
        "enum",
        "extension",
        "fallthrough",
        "false",
        "fileprivate",
        "final",
        "for",
        "func",
        "get",
        "guard",
        "if",
        "import",
        "in",
        "init",
        "inout",
        "internal",
        "is",
        "lazy",
        "let",
        "mutating",
        "nil",
        "nonmutating",
        "open",
        "operator",
        "override",
        "private",
        "protocol",
        "public",
        "repeat",
        "required",
        "rethrows",
        "return",
        "required",
        "self",
        "set",
        "static",
        "struct",
        "subscript",
        "super",
        "switch",
        "throw",
        "throws",
        "true",
        "try",
        "typealias",
        "unowned",
        "var",
        "weak",
        "where",
        "while", "Any",
        "Array",
        "AutoreleasingUnsafePointer",
        "BidirectionalReverseView",
        "Bit",
        "Bool",
        "CFunctionPointer",
        "COpaquePointer",
        "CVaListPointer",
        "Character",
        "CollectionOfOne",
        "ConstUnsafePointer",
        "ContiguousArray",
        "Data",
        "Dictionary",
        "DictionaryGenerator",
        "DictionaryIndex",
        "Double",
        "EmptyCollection",
        "EmptyGenerator",
        "EnumerateGenerator",
        "FilterCollectionView",
        "FilterCollectionViewIndex",
        "FilterGenerator",
        "FilterSequenceView",
        "Float",
        "Float80",
        "FloatingPointClassification",
        "GeneratorOf",
        "GeneratorOfOne",
        "GeneratorSequence",
        "HeapBuffer",
        "HeapBuffer",
        "HeapBufferStorage",
        "HeapBufferStorageBase",
        "ImplicitlyUnwrappedOptional",
        "IndexingGenerator",
        "Int",
        "Int16",
        "Int32",
        "Int64",
        "Int8",
        "IntEncoder",
        "LazyBidirectionalCollection",
        "LazyForwardCollection",
        "LazyRandomAccessCollection",
        "LazySequence",
        "Less",
        "MapCollectionView",
        "MapSequenceGenerator",
        "MapSequenceView",
        "MirrorDisposition",
        "ObjectIdentifier",
        "OnHeap",
        "Optional",
        "PermutationGenerator",
        "QuickLookObject",
        "RandomAccessReverseView",
        "Range",
        "RangeGenerator",
        "RawByte",
        "Repeat",
        "ReverseBidirectionalIndex",
        "Printable",
        "ReverseRandomAccessIndex",
        "SequenceOf",
        "SinkOf",
        "Slice",
        "StaticString",
        "StrideThrough",
        "StrideThroughGenerator",
        "StrideTo",
        "StrideToGenerator",
        "String",
        "Index",
        "UTF8View",
        "Index",
        "UnicodeScalarView",
        "IndexType",
        "GeneratorType",
        "UTF16View",
        "UInt",
        "UInt16",
        "UInt32",
        "UInt64",
        "UInt8",
        "UTF16",
        "UTF32",
        "UTF8",
        "UnicodeDecodingResult",
        "UnicodeScalar",
        "Unmanaged",
        "UnsafeArray",
        "UnsafeArrayGenerator",
        "UnsafeMutableArray",
        "UnsafePointer",
        "VaListBuilder",
        "Header",
        "Zip2",
        "ZipGenerator2"
    ],
    defentions: [
        .comments("//(.*)"), // Single line
        .comments("/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/"), // multi-line comment
        .numbers("(?<=(\\s|\\[|,|:))(\\d)+"),
        .types("\\b\\s*[A-Z]+[a-z]*[A-Z]*\\s*"),
        .functions("(/func\\s+([a-z_]*\\w*)\\s*\\(/)"),
        .functions("\\w+\\(([a-z0-9_:]*\\w*[,]*)*\\)\\s*"),
        .operators("&&|<=|<|>|>=|!=|==|&|OR*|!|[||]{2}|\\|[^->]"),
        .attributes("(@).+"),
        .dotAccess("\\s*\\.\\w+\\s*?"),
        .properties("\\w\\S\\.\\w\\s+"),
        .macros("^(#)\\w\\s*")
    ])
